{"Typealiases.html#/s:14ColaExpression0A0a":{"name":"Cola","abstract":"<p>Type alias of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ColaExpression.html\">ColaExpression</a></code></p>"},"Typealiases.html#/s:14ColaExpression5RegExa":{"name":"RegEx","abstract":"<p>Type alias of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ColaExpression.html\">ColaExpression</a></code></p>"},"Typealiases.html#/s:14ColaExpression0A2Exa":{"name":"ColaEx","abstract":"<p>Type alias of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ColaExpression.html\">ColaExpression</a></code></p>"},"Typealiases.html#/s:14ColaExpression7Patterna":{"name":"Pattern","abstract":"<p>Type alias of <code>String</code></p>"},"Typealiases.html#/s:14ColaExpression0A7Patterna":{"name":"ColaPattern","abstract":"<p>Type alias of <code>String</code></p>"},"Typealiases.html#/s:14ColaExpression0A7Optionsa":{"name":"ColaOptions","abstract":"<p>Type alias of <code>NSRegularExpression.Options</code></p>"},"Typealiases.html#/s:14ColaExpression0A15MatchingOptionsa":{"name":"ColaMatchingOptions","abstract":"<p>Type alias of <code>NSRegularExpression.MatchingOptions</code></p>"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV7patternSSv":{"name":"pattern","abstract":"<p>Regular expression pattern that will be used to evaluate a specific string.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAVABycfc":{"name":"init()","abstract":"<p><code>fatalError</code> occurs when using this empty initializer as ColaExpression must be initialized using <code>init(_ pattern:)</code> or <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ColaExpression.html#/s:14ColaExpressionAAVABSS7pattern_tcfc\">init(pattern:)</a></code>.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAVABSScfc":{"name":"init(_:)","abstract":"<p>Designated Initializer for <code>ColaExpression</code></p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAVABSS7pattern_tcfc":{"name":"init(pattern:)","abstract":"<p>Designated Initializer for <code>ColaExpression</code></p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV24stringByReplacingMatchesS2S2in_So09NSRegularB0C7OptionsV7optionsAF08MatchingI0V08matchingI0SC8_NSRangeVSg5rangeSS12withTemplatetF":{"name":"stringByReplacingMatches(in:options:matchingOptions:range:withTemplate:)","abstract":"<p>Evaluates a string for all instances of a regular expression pattern and returns a new string of matches repleaced.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV13matchedRangesSays5RangeVySS5IndexVGGSS2of_So09NSRegularB0C7OptionsV7optionsAL08MatchingI0V08matchingI0tF":{"name":"matchedRanges(of:options:matchingOptions:)","abstract":"<p>Evaluates a string for all instances of a regular expression pattern and returns a list of matched ranges for that string.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV7matchesSaySSGSS2of_So09NSRegularB0C7OptionsV7optionsAG08MatchingF0V08matchingF0tF":{"name":"matches(of:options:matchingOptions:)","abstract":"<p>Evaluates a string for all instances of a regular expression pattern and returns a list of matched strings for that string.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV10firstMatchSSSgSS2of_So09NSRegularB0C7OptionsV7optionsAG08MatchingG0V08matchingG0tF":{"name":"firstMatch(of:options:matchingOptions:)","abstract":"<p>Evaluates a string for all instances of a regular expression pattern and returns the first of value of the list of matched strings for that string.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV7isMatchSbSS4with_So09NSRegularB0C7OptionsV7optionsAF08MatchingG0V08matchingG0tF":{"name":"isMatch(with:options:matchingOptions:)","abstract":"<p>Tests a string to see if it matches the regular expression pattern.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV17replaceOccurencesS2S2in_SS4withtF":{"name":"replaceOccurences(in:with:)","abstract":"<p>Replace specific ranges in a string with a specific character.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV24firstCharacterOfEachWordSaySSGSS2in_tFZ":{"name":"firstCharacterOfEachWord(in:)","abstract":"<p>Returns an array containing the first letter of each word in the test string.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV23lastCharacterOfEachWordSaySSGSS2in_tFZ":{"name":"lastCharacterOfEachWord(in:)","abstract":"<p>Returns an array containing the last letter of each word in the test string.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV5checkSbSS5email_tFZ":{"name":"check(email:)","abstract":"<p>Tests a string to check if it is a valid email address by using a regular expression.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV7sanitzeS2S6string_tFZ":{"name":"sanitze(string:)","abstract":"<p>Sanitizes of a string by removing all non-Alphanumeric characters (excluding whitespaces)</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV12emailPatternABvZ":{"name":"emailPattern","abstract":"<p>Pattern matches email addresses.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV21firstCharacterPatternABvZ":{"name":"firstCharacterPattern","abstract":"<p>Pattern matches first alphanumeric character of each word.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV20lastCharacterPatternABvZ":{"name":"lastCharacterPattern","abstract":"<p>Pattern matches last alphanumeric character of each word.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV22nonAlphanumericPatternABvZ":{"name":"nonAlphanumericPattern","abstract":"<p>Pattern matches non-Alphanumeric characters.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV27nonAlphanumericSpacePatternABvZ":{"name":"nonAlphanumericSpacePattern","abstract":"<p>Pattern matches non-Alphanumeric and non-Whitespace characters.</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html#/s:14ColaExpressionAAV18scientificNotationABvZ":{"name":"scientificNotation","abstract":"<p>Pattern matches scientific notations</p>","parent_name":"ColaExpression"},"Structs/ColaExpression.html":{"name":"ColaExpression","abstract":"<p>Undocumented</p>"},"Extensions/String.html#/s:SS14ColaExpressionE7isMatchSbSS7pattern_So09NSRegularB0C7OptionsV7optionstF":{"name":"isMatch(pattern:options:)","abstract":"<p>A Boolean value indicating if this string matches the given pattern.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE7isAlphaSbyF":{"name":"isAlpha()","abstract":"<p>A Boolean value indicating if all the characters are letters.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE14isAlphanumericSbyF":{"name":"isAlphanumeric()","abstract":"<p>A Boolean value indicating if all the characters are alphanumeric.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE13isCapitalizedSbyF":{"name":"isCapitalized()","abstract":"<p>A Boolean value indicating if the first characters in all of the words in the string are uppercased.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE15isDecapitalizedSbyF":{"name":"isDecapitalized()","abstract":"<p>A Boolean value indicating if the first characters in all of the words in the string are lowercased.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE12isLowercasedSbyF":{"name":"isLowercased()","abstract":"<p>A Boolean value indicating if all the characters are lowercased.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE9isNumericSbyF":{"name":"isNumeric()","abstract":"<p>A Boolean value indicating if all the characters are numbers.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE12isUppercasedSbyF":{"name":"isUppercased()","abstract":"<p>A Boolean value indicating if all the characters are uppercased.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE8containsSb10Foundation12CharacterSetV10characters_tF":{"name":"contains(characters:)","abstract":"<p>A Boolean value indicating if all the characters in the string belong to a specific <code>CharacterSet</code>.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE7matchesSaySSGSS7pattern_So09NSRegularB0C7OptionsV7optionsAF08MatchingF0V08matchingF0tF":{"name":"matches(pattern:options:matchingOptions:)","abstract":"<p>Evaluates this string for all instances of a regular expression pattern and returns a list of matched strings for that string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE10firstMatchSSSgSS7pattern_So09NSRegularB0C7OptionsV7optionsAF08MatchingG0V08matchingG0tF":{"name":"firstMatch(pattern:options:matchingOptions:)","abstract":"<p>Evaluates a string for all instances of a regular expression pattern and returns the first of value of the list of matched strings for that string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE13matchedRangesSays5RangeVySS5IndexVGGSS4with_So09NSRegularB0C7OptionsV7optionsAK08MatchingI0V08matchingI0tF":{"name":"matchedRanges(with:options:matchingOptions:)","abstract":"<p>Evaluates this string for all instances of a regular expression pattern and returns a list of matched ranges for that string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE24stringByReplacingMatchesS2S4with_So09NSRegularB0C7OptionsV7optionsAE08MatchingI0V08matchingI0SC8_NSRangeVSg5rangeSS0G8TemplatetF":{"name":"stringByReplacingMatches(with:options:matchingOptions:range:withTemplate:)","abstract":"<p>Evaluates this string for all instances of a regular expression pattern and returns a new string of all matches repleaced.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE10camelCasedSSyF":{"name":"camelCased()","abstract":"<p>Returns a camel cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE11capitalizedSSyF":{"name":"capitalized()","abstract":"<p>Returns a capitalized version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE13decapitalizedSSyF":{"name":"decapitalized()","abstract":"<p>Returns a decapitalized version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE10kebabCasedSSyF":{"name":"kebabCased()","abstract":"<p>Returns the kebab cased (a.k.a. slug) version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE11pascalCasedSSyF":{"name":"pascalCased()","abstract":"<p>Returns a pascal cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE10snakeCasedSSyF":{"name":"snakeCased()","abstract":"<p>Returns the snake cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE16splitWordsByCaseSSyF":{"name":"splitWordsByCase()","abstract":"<p>Splits a string into mutliple words, delimited by uppercase letters.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE9swapCasedSSyF":{"name":"swapCased()","abstract":"<p>Returns the swap cased version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE14firstCharacterSSyF":{"name":"firstCharacter()","abstract":"<p>Returns the first character of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE13lastCharacterSSyF":{"name":"lastCharacter()","abstract":"<p>Returns the last character of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE9latinizedSSyF":{"name":"latinized()","abstract":"<p>Returns the latinized version of the string without diacritics.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE6lengthSiyF":{"name":"length()","abstract":"<p>Returns the character count of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE8reversedSSv":{"name":"reversed","abstract":"<p>Retuns the reversed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE14withoutAccentsSSyF":{"name":"withoutAccents()","abstract":"<p>Returns the string without diacritics.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE17replaceOccurencesS2S7matches_SS4withtF":{"name":"replaceOccurences(matches:with:)","abstract":"<p>Replace specific ranges in this string with a specific character using a given regular expression pattern.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE7paddingSSSi6length_SS5tokentF":{"name":"padding(length:token:)","abstract":"<p>Returns the center-padded version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE11paddingLeftSSSi6length_SS5tokentF":{"name":"paddingLeft(length:token:)","abstract":"<p>Returns the left-padded version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE12paddingRightSSSi6length_SS5tokentF":{"name":"paddingRight(length:token:)","abstract":"<p>Returns the right-padded version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE26paddingConditionsSatisfiedSbSi10tokenCount_Si6lengthtF":{"name":"paddingConditionsSatisfied(tokenCount:length:)","abstract":"<p>A Boolean value indicating if all the pre-padding operation conditions are satisfied.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE8trimLeftSSSi9byKeeping_tF":{"name":"trimLeft(byKeeping:)","abstract":"<p>Returns a prefixed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE9trimRightSSSi9byKeeping_tF":{"name":"trimRight(byKeeping:)","abstract":"<p>Returns a suffixed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE8trimLeftSSSi10byRemoving_tF":{"name":"trimLeft(byRemoving:)","abstract":"<p>Returns the left-trimmed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE9trimRightSSSi10byRemoving_tF":{"name":"trimRight(byRemoving:)","abstract":"<p>Returns the right-trimmed version of the string.</p>","parent_name":"String"},"Extensions/String.html#/s:SS14ColaExpressionE9truncatedSSSi6length_tF":{"name":"truncated(length:)","abstract":"<p>Returns the truncated string with an ellipsis.</p>","parent_name":"String"},"Extensions/String.html":{"name":"String"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}